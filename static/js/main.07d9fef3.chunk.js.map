{"version":3,"sources":["shared/header/header.js","components/home/home.js","components/brand/first/first.js","components/brand/second/second.js","components/brand/brand.js","components/build/build.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","main","key","this","setState","collapseOnSelect","expand","className","to","src","alt","Toggle","id","Menu","Item","onChange","currentKey","onClick","Component","Home","First","Second","Brand","exact","path","component","Build","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07d9fef3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport './header.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            main: 0,\r\n        }\r\n\r\n    }\r\n\r\n    currentKey(key) {\r\n        if(key !==this.state.main){\r\n            this.setState({ main: key })\r\n        }else{\r\n            this.setState({ main: 0 })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar collapseOnSelect expand=\"lg\">\r\n                    <div className='logo'>\r\n                        <NavLink to={'/home'}>\r\n                            <img src='/images/logo.png' alt='logo' />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className='right_nav'>\r\n                        <ul className='mb-0'>\r\n                            <li>\r\n                                <Dropdown>\r\n                                    <Dropdown.Toggle id=\"dropdown-basic\">\r\n                                        Account\r\n                                    </Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                        <Dropdown.Item><NavLink to='/setting'>Setting</NavLink></Dropdown.Item>\r\n                                        <Dropdown.Item><NavLink to='/user'>User</NavLink></Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </li>\r\n                            <li className='m-0'>\r\n                                <Dropdown className='userItem'>\r\n                                    <Dropdown.Toggle id=\"dropdown-basic\">\r\n                                        Aroun <img src='/images/user.png' alt='user' />\r\n                                    </Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                        <Dropdown.Item><NavLink to='/profile'>Profile</NavLink></Dropdown.Item>\r\n                                        <Dropdown.Item><NavLink to='/signout'>Sign Out</NavLink></Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='mobile_menu'>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle id=\"dropdown-basic\"></Dropdown.Toggle>\r\n                            <Dropdown.Menu onChange={() => this.currentKey(0)}>\r\n                                <p className='lvl1 custom_lvl' onClick={() => this.currentKey(1)}>Aaron</p>\r\n                                {this.state.main === 1 ? <div>\r\n                                     <Dropdown.Item><NavLink to='' className='lvl3 custom_lvl'>Profile</NavLink></Dropdown.Item>\r\n                                     <Dropdown.Item><NavLink to='' className='lvl3 custom_lvl'>SIGN OUT</NavLink></Dropdown.Item>\r\n                                </div>\r\n                                    : null\r\n                                }\r\n                                <p className='lvl1 custom_lvl' onClick={() => this.currentKey(2)}>Account</p>\r\n                                {this.state.main === 2 ? <div>\r\n                                     <Dropdown.Item><NavLink to='' className='lvl3 custom_lvl'>Setting</NavLink></Dropdown.Item>\r\n                                     <Dropdown.Item><NavLink to='' className='lvl3 custom_lvl'>User</NavLink></Dropdown.Item>\r\n                                </div>\r\n                                    : null\r\n                                }\r\n                                 <Dropdown.Item><NavLink to='/build' className='lvl2 custom_lvl'>Build</NavLink></Dropdown.Item>\r\n                                <p className='lvl2 custom_lvl' onClick={() => this.currentKey(5)}>Our Brand</p>\r\n                                {this.state.main === 5 ? <div>\r\n                                     <Dropdown.Item><NavLink to='/brand/first' className='lvl3 custom_lvl'>Company Info</NavLink></Dropdown.Item>\r\n                                     <Dropdown.Item><NavLink to='/brand/second' className='lvl3 custom_lvl'>Our Foundations</NavLink></Dropdown.Item>\r\n                                    {/*  <Dropdown.Item><NavLink to='' className='lvl3 custom_lvl'>Our Personality</NavLink></Dropdown.Item>\r\n                                     <Dropdown.Item><NavLink to='' className='lvl3 custom_lvl'>Our Voice</NavLink></Dropdown.Item>\r\n                                     <Dropdown.Item><NavLink to='' className='lvl3 custom_lvl'>Our Look</NavLink></Dropdown.Item> */}\r\n                                </div>\r\n                                    : null\r\n                                }\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport './home.css'\r\n\r\nclass Home extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home_page\">\r\n                <h1>Welcome to <span className='line_through'>Rainbow Finder</span> Patter</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n\r\nclass First extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <h2>First</h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default First;\r\n","import React, { Component } from 'react';\r\n\r\nclass Second extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <h2>Second</h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Second;\r\n","import React, { Component } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport First from './first/first';\r\nimport Second from './second/second';\r\n\r\nimport './brand.css'\r\n\r\nclass Brand extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='body_content'>\r\n          <div className='sidebar sidebar_list second'>\r\n            <ul>\r\n              <li><NavLink to={'/brand/first'}>First</NavLink ></li>\r\n              <li><NavLink to={'/brand/second'}>Second</NavLink ></li>\r\n            </ul>\r\n          </div>\r\n          <div className='content'>\r\n            <Route exact path='/brand/first' component={First} />\r\n            <Route exact path='/brand/second' component={Second} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Brand;\r\n","import React, { Component } from 'react';\r\n\r\nclass Build extends Component {\r\n\r\n  render() {\r\n    return (\r\n     <h2>Build</h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Build;\r\n","import React, { Component } from 'react';\nimport Header from './shared/header/header';\nimport { NavLink, Route, Redirect } from 'react-router-dom';\nimport './App.css'\nimport Home from './components/home/home';\nimport Brand from './components/brand/brand';\nimport Build from './components/build/build';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className='body_content'>\n          <div className='sidebar sidebar_list'>\n            <ul>\n              <li><NavLink to={'/build'}>Build</NavLink ></li>\n              <li><NavLink to={'/brand'}>Our Brand</NavLink ></li>\n            </ul>\n          </div>\n          <div className='content'>\n            <Route exact path='/home' component={Home} />\n            <Route path='/build' component={Build} />\n            <Route path='/brand' component={Brand} />\n            <Route path=''>\n              <Redirect to='/home' />\n            </Route>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}